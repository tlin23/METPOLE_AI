events {
    worker_connections 1024;
}

http {
    # Enable logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    upstream backend {
        server 127.0.0.1:8000;
        # Health check settings
        keepalive 32;
    }

    upstream sqlite-web {
        server 127.0.0.1:8081;
        keepalive 16;
    }

    # Error pages
    error_page 502 503 504 /50x.html;

    server {
        listen 0.0.0.0:8080;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Custom error page for backend failures
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }

        # API routes go to FastAPI backend
        location /api/ {
            # Proxy timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Retry settings
            proxy_next_upstream error timeout http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 10s;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Custom error handling for API routes
            error_page 502 503 504 = @api_error;
        }

        # Custom error handler for API routes
        location @api_error {
            add_header Content-Type application/json always;
            return 503 '{"success": false, "message": "The API service is temporarily unavailable. Please try again in a few moments.", "error_code": 503}';
        }

                # Database admin interface - secured with HTTP basic auth
        location /db/ {
            # HTTP Basic Auth protection
            auth_basic "Database Admin Access";
            auth_basic_user_file /etc/nginx/.htpasswd;

            # Security: Only allow specific IPs in production (commented for dev)
            # allow 127.0.0.1;
            # allow 10.0.0.0/8;
            # deny all;

            # Proxy timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Proxy to sqlite-web with proper path handling
            proxy_pass http://sqlite-web/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Handle redirects properly
            proxy_redirect ~^http://([^/]+)/(.*)$ /db/$2;

            # Custom error for DB admin
            error_page 502 503 504 = @db_error;
        }

        # SQLite-web table and action routes (answers, feedback, questions, etc.)
        location ~ ^/(answers|feedback|questions|sessions|users|query)/ {
            # HTTP Basic Auth protection
            auth_basic "Database Admin Access";
            auth_basic_user_file /etc/nginx/.htpasswd;

            # Proxy timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Proxy to sqlite-web, keeping the full path
            proxy_pass http://sqlite-web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Custom error for DB admin
            error_page 502 503 504 = @db_error;
        }

                # Static assets for sqlite-web (CSS, JS, etc.) - also protected
        location /static/ {
            # HTTP Basic Auth protection for static assets too
            auth_basic "Database Admin Access";
            auth_basic_user_file /etc/nginx/.htpasswd;

            # Proxy to sqlite-web static assets
            proxy_pass http://sqlite-web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Cache static assets
            expires 1h;
            add_header Cache-Control "public, immutable";
        }

        # Custom error handler for DB admin
        location @db_error {
            add_header Content-Type text/html always;
            return 503 '<html><body><h1>Database Admin Unavailable</h1><p>The database admin interface is temporarily unavailable. Please try again later.</p></body></html>';
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "OK";
            add_header Content-Type text/plain;
        }

        # Default - return 404 since frontend is deployed separately
        location / {
            return 404 "Frontend is deployed separately to Vercel";
            add_header Content-Type text/plain;
        }
    }
}
