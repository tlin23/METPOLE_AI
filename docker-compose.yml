version: "3.8"

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    volumes:
      - metpol-sqlite:/data
      - metpol-db:/app/backend/data/prod/chroma_db
    expose:
      - "8000"
    environment:
      # Core application settings
      - PRODUCTION=${PRODUCTION:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}

      # Google OAuth (required secrets)
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}

      # OpenAI API (required secret)
      - OPENAI_API_KEY=${OPENAI_API_KEY}

      # Access control
      - ADMIN_EMAILS=${ADMIN_EMAILS}

      # Database configuration
      - METROPOLE_DB_PATH=/data/app.db
      - ENABLE_DB_DUMP=${ENABLE_DB_DUMP:-True}
      - INDEX_DIR=/data/chroma_db

      # Rate limiting
      - MAX_QUESTIONS_PER_DAY=${MAX_QUESTIONS_PER_DAY:-50}
      - MAX_QUESTIONS_PER_DAY_ADMIN=${MAX_QUESTIONS_PER_DAY_ADMIN:-300}

      # CORS configuration
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:5173,https://metpole-ai.vercel.app}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  sqlite-web:
    image: coleifer/sqlite-web:latest
    command: sqlite_web --host 0.0.0.0 --port 8081 /data/app.db
    volumes:
      - metpol-sqlite:/data
    expose:
      - "8081"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:8081",
        ]
      interval: 30s
      timeout: 5s
      retries: 3

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      # Mount nginx config and htpasswd file
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd:ro
    environment:
      # Pass DB admin credentials to nginx for basic auth
      - DB_ADMIN_USERNAME=${DB_ADMIN_USERNAME:-admin}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD:-admin}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s

volumes:
  metpol-sqlite:
    driver: local
  metpol-db:
    driver: local
# ===========================================================================
# DEVELOPMENT SETUP NOTES
# ===========================================================================
#
# To run this setup:
# 1. Copy env.example to .env and fill in your values
# 2. Run: docker-compose up --build
# 3. Access the API at http://localhost:8080/api/
# 4. Access the DB admin at http://localhost:8080/db/ (with basic auth)
#
# For production-like testing:
# 1. Set PRODUCTION=true in your .env
# 2. Set CORS_ALLOWED_ORIGINS to only your production domain
# 3. Use strong DB_ADMIN_PASSWORD
#
# ===========================================================================
